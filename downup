#!/bin/sh

# Overwrite shell parameter with custom hardcoded path if desired
deployfile="$1"

app=$(grep 'app:' $deployfile | tail -n1 | awk '{ print $2}')
echo "app name is '$app'"
kubectl delete -f $deployfile
kubectl apply -f $deployfile

# get the latest  pod name
pod=$(kubectl get pods -l app=$app -o custom-columns=:metadata.name --sort-by=.metadata.creationTimestamp | tail -1)

# get the list of containers
containers_string=$(kubectl get pods $pod -o jsonpath={.spec.containers[*].name})
IFS=', ' read -r -a containers <<< "$containers_string"

for container in "${containers[@]}"; do
	logs="logs-${container}"
	echo "#!/bin/sh" > $logs
	echo "echo \"Running kubectl logs $pod $container\":" >> $logs
	echo "kubectl logs $pod $container" >> $logs
	chmod +x $logs

	exec="exec-${container}"
	echo "#!/bin/sh" > $exec
	echo "echo \"Running kubectl exec --stdin --tty pod/$pod --container $container -- /bin/bash\":" >> $exec
	echo "kubectl exec --stdin --tty pod/$pod --container $container -- /bin/bash" >> $exec
	chmod +x $exec
done
